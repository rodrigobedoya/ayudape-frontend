{"ast":null,"code":"import _objectSpread from \"/Users/userr2232/Documents/miscProjects/UtecSoftwareEngineering/yape-bcp-project-ayuda-pe/ayudape-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/userr2232/Documents/miscProjects/UtecSoftwareEngineering/yape-bcp-project-ayuda-pe/ayudape-frontend/src/App.js\";\nimport React from 'react';\nimport MessageList from './components/MessageList';\nimport Header from './components/Header';\nimport Sendform from './components/Sendform';\nimport { sendMessage } from './endpoints';\nconst TEST_DATA = [{\n  date: '8:30',\n  sender: false,\n  text: 'Hola soy AyudaPe! Tu asistente personal de Yape.'\n}, {\n  date: '8:31',\n  sender: true,\n  text: 'Habla causa'\n}, {\n  date: '8:32',\n  sender: false,\n  text: '¿Qué necesitas saber?'\n}, {\n  date: '8:32',\n  sender: true,\n  text: 'que haces?'\n}];\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      userInput: \"\",\n      messages: TEST_DATA\n    };\n\n    this.handleSendMessage = async () => {\n      if (this.state.userInput.trim().length === 0) return;\n      const newMessage = {\n        text: this.state.userInput,\n        sender: true,\n        date: '9:00'\n      };\n      let _messages = this.state.messages;\n\n      _messages.push(newMessage);\n\n      try {\n        let r = await sendMessage(newMessage.text);\n        const data = r.data.output.generic;\n        var chatbotMessages = data.map(message => new Object({\n          date: '8:30',\n          sender: false,\n          text: message.text // source: message.source\n\n        }));\n      } catch (e) {\n        console.log(e);\n      } finally {\n        this.setState(s => {\n          let _messages_ = _messages.concat(chatbotMessages);\n\n          return _objectSpread({}, s, {\n            userInput: \"\",\n            messages: _messages_\n          });\n        }, () => console.log(this.state.messages));\n      }\n    };\n\n    this.handleUserInputChange = input => {\n      if (this.state.userInput === \"\" && input.trim().length === 0) return;\n      this.setState(s => {\n        return _objectSpread({}, s, {\n          userInput: input\n        });\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"app\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(MessageList, {\n      messages: this.state.messages,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), React.createElement(Sendform, {\n      onUserInputChange: this.handleUserInputChange,\n      userInput: this.state.userInput,\n      send: this.handleSendMessage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/userr2232/Documents/miscProjects/UtecSoftwareEngineering/yape-bcp-project-ayuda-pe/ayudape-frontend/src/App.js"],"names":["React","MessageList","Header","Sendform","sendMessage","TEST_DATA","date","sender","text","App","Component","state","userInput","messages","handleSendMessage","trim","length","newMessage","_messages","push","r","data","output","generic","chatbotMessages","map","message","Object","e","console","log","setState","s","_messages_","concat","handleUserInputChange","input","render"],"mappings":"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","sourcesContent":["import React from 'react'\nimport MessageList from './components/MessageList'\nimport Header from './components/Header'\nimport Sendform from './components/Sendform'\nimport {sendMessage} from './endpoints'\n\nconst TEST_DATA = [\n    {\n        date: '8:30',\n        sender: false,\n        text: 'Hola soy AyudaPe! Tu asistente personal de Yape.'\n    },\n    {\n        date: '8:31',\n        sender:true,\n        text: 'Habla causa'\n    },\n    {\n        date: '8:32',\n        sender:false,\n        text: '¿Qué necesitas saber?'\n    },\n    {\n        date: '8:32',\n        sender:true,\n        text: 'que haces?'\n    }\n]\n\nclass App extends React.Component {\n    state = {\n      userInput: \"\",\n      messages: TEST_DATA\n    };\n    handleSendMessage = async() => {\n        if(this.state.userInput.trim().length === 0) return;\n      const newMessage = {text:this.state.userInput,sender:true,date:'9:00'};\n      let _messages = this.state.messages;\n      _messages.push(newMessage);\n        try{\n            let r = await sendMessage(newMessage.text);\n            const data = r.data.output.generic;\n            var chatbotMessages = data.map(message =>\n                new Object({\n                    date: '8:30',\n                    sender: false,\n                    text: message.text\n                    // source: message.source\n                })\n            );\n        } catch(e){\n            console.log(e);\n        } finally {\n            this.setState(s => {\n                let _messages_ = _messages.concat(chatbotMessages);\n                return({\n                    ...s,\n                    userInput: \"\",\n                    messages: _messages_\n                });\n            }, () => console.log(this.state.messages));\n        }\n    };\n\n    handleUserInputChange = (input) => {\n        if(this.state.userInput === \"\" && input.trim().length === 0) return;\n      this.setState(s => {\n        return({\n          ...s,\n          userInput: input\n        })\n      })\n    };\n\n    render() {\n        return (\n            <div className=\"app\">\n                <Header />\n                <MessageList messages={this.state.messages}/>\n                <Sendform onUserInputChange={this.handleUserInputChange} userInput={this.state.userInput} send={this.handleSendMessage}/>\n            </div>\n        );\n    }\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}